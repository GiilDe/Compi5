State 50 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Funcs EF

    2 Funcs: %empty
    3      | FuncDecl Funcs

    4 $@1: %empty

    5 $@2: %empty

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN PreConditions LBRACE $@2 Statements RBRACE

    7 RetType: Type
    8        | VOID

    9 Formals: %empty
   10        | FormalsList

   11 FormalsList: FormalDecl
   12            | FormalDecl COMMA FormalsList

   13 FormalDecl: Type ID

   14 PreConditions: %empty
   15              | PreConditions PreCondition

   16 $@3: %empty

   17 PreCondition: PRECOND LPAREN Exp $@3 RPAREN

   18 Statements: Statement
   19           | Statements Statement

   20 Statement: Open_statement
   21          | Closed_statement

   22 Open_statement: If_Start M Simple_statement
   23               | If_Start M Open_statement
   24               | If_Else Open_statement
   25               | While_Start Open_statement

   26 Closed_statement: Simple_statement
   27                 | If_Else Closed_statement
   28                 | While_Start M Closed_statement

   29 $@4: %empty

   30 While_Start: WHILE $@4 LPAREN M Exp RPAREN

   31 If_Start: IF LPAREN Exp RPAREN

   32 $@5: %empty

   33 $@6: %empty

   34 If_Else: If_Start M Closed_statement N $@5 ELSE $@6 M

   35 $@7: %empty

   36 Simple_statement: LBRACE $@7 Statements RBRACE
   37                 | Type ID SC
   38                 | Type ID ASSIGN Exp SC
   39                 | ID ASSIGN Exp SC
   40                 | Call SC
   41                 | RETURN SC
   42                 | RETURN Exp SC
   43                 | BREAK SC
   44                 | CONTINUE SC

   45 Call: ID LPAREN ExpList RPAREN
   46     | ID LPAREN RPAREN

   47 ExpList: Exp
   48        | Exp COMMA ExpList

   49 Type: INT
   50     | BYTE
   51     | BOOL

   52 Exp: LPAREN Exp RPAREN
   53    | Exp BINOP Exp
   54    | ID
   55    | Call
   56    | NUM
   57    | NUM B
   58    | STRING
   59    | TRUE
   60    | FALSE
   61    | NOT Exp
   62    | Exp AND M Exp
   63    | Exp OR M Exp
   64    | Exp RELOP Exp

   65 M: %empty

   66 N: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 8
INT (259) 49
BYTE (260) 50
B (261) 57
BOOL (262) 51
OR (263) 63
AND (264) 62
NOT (265) 61
TRUE (266) 59
FALSE (267) 60
RETURN (268) 41 42
IF (269) 31
ELSE (270) 34
WHILE (271) 30
BREAK (272) 43
CONTINUE (273) 44
PRECOND (274) 17
SC (275) 37 38 39 40 41 42 43 44
COMMA (276) 12 48
LPAREN (277) 6 17 30 31 45 46 52
RPAREN (278) 6 17 30 31 45 46 52
LBRACE (279) 6 36
RBRACE (280) 6 36
ASSIGN (281) 38 39
RELOP (282) 64
BINOP (283) 53
ID (284) 6 13 37 38 39 45 46 54
NUM (285) 56 57
STRING (286) 58
EF (287) 1


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1, on right: 0
Funcs (35)
    on left: 2 3, on right: 1 3
FuncDecl (36)
    on left: 6, on right: 3
$@1 (37)
    on left: 4, on right: 6
$@2 (38)
    on left: 5, on right: 6
RetType (39)
    on left: 7 8, on right: 6
Formals (40)
    on left: 9 10, on right: 6
FormalsList (41)
    on left: 11 12, on right: 10 12
FormalDecl (42)
    on left: 13, on right: 11 12
PreConditions (43)
    on left: 14 15, on right: 6 15
PreCondition (44)
    on left: 17, on right: 15
$@3 (45)
    on left: 16, on right: 17
Statements (46)
    on left: 18 19, on right: 6 19 36
Statement (47)
    on left: 20 21, on right: 18 19
Open_statement (48)
    on left: 22 23 24 25, on right: 20 23 24 25
Closed_statement (49)
    on left: 26 27 28, on right: 21 27 28 34
While_Start (50)
    on left: 30, on right: 25 28
$@4 (51)
    on left: 29, on right: 30
If_Start (52)
    on left: 31, on right: 22 23 34
If_Else (53)
    on left: 34, on right: 24 27
$@5 (54)
    on left: 32, on right: 34
$@6 (55)
    on left: 33, on right: 34
Simple_statement (56)
    on left: 36 37 38 39 40 41 42 43 44, on right: 22 26
$@7 (57)
    on left: 35, on right: 36
Call (58)
    on left: 45 46, on right: 40 55
ExpList (59)
    on left: 47 48, on right: 45 48
Type (60)
    on left: 49 50 51, on right: 7 13 37 38
Exp (61)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64, on right: 17 30
    31 38 39 42 47 48 52 53 61 62 63 64
M (62)
    on left: 65, on right: 22 23 28 30 34 62 63
N (63)
    on left: 66, on right: 34


State 0

    0 $accept: . Program $end

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 2 (Funcs)

    Program   go to state 5
    Funcs     go to state 6
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


State 1

    8 RetType: VOID .

    $default  reduce using rule 8 (RetType)


State 2

   49 Type: INT .

    $default  reduce using rule 49 (Type)


State 3

   50 Type: BYTE .

    $default  reduce using rule 50 (Type)


State 4

   51 Type: BOOL .

    $default  reduce using rule 51 (Type)


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 10


State 6

    1 Program: Funcs . EF

    EF  shift, and go to state 11


State 7

    3 Funcs: FuncDecl . Funcs

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 2 (Funcs)

    Funcs     go to state 12
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


State 8

    6 FuncDecl: RetType . ID LPAREN $@1 Formals RPAREN PreConditions LBRACE $@2 Statements RBRACE

    ID  shift, and go to state 13


State 9

    7 RetType: Type .

    $default  reduce using rule 7 (RetType)


State 10

    0 $accept: Program $end .

    $default  accept


State 11

    1 Program: Funcs EF .

    $default  reduce using rule 1 (Program)


State 12

    3 Funcs: FuncDecl Funcs .

    $default  reduce using rule 3 (Funcs)


State 13

    6 FuncDecl: RetType ID . LPAREN $@1 Formals RPAREN PreConditions LBRACE $@2 Statements RBRACE

    LPAREN  shift, and go to state 14


State 14

    6 FuncDecl: RetType ID LPAREN . $@1 Formals RPAREN PreConditions LBRACE $@2 Statements RBRACE

    $default  reduce using rule 4 ($@1)

    $@1  go to state 15


State 15

    6 FuncDecl: RetType ID LPAREN $@1 . Formals RPAREN PreConditions LBRACE $@2 Statements RBRACE

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 9 (Formals)

    Formals      go to state 16
    FormalsList  go to state 17
    FormalDecl   go to state 18
    Type         go to state 19


State 16

    6 FuncDecl: RetType ID LPAREN $@1 Formals . RPAREN PreConditions LBRACE $@2 Statements RBRACE

    RPAREN  shift, and go to state 20


State 17

   10 Formals: FormalsList .

    $default  reduce using rule 10 (Formals)


State 18

   11 FormalsList: FormalDecl .
   12            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 21

    $default  reduce using rule 11 (FormalsList)


State 19

   13 FormalDecl: Type . ID

    ID  shift, and go to state 22


State 20

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN . PreConditions LBRACE $@2 Statements RBRACE

    $default  reduce using rule 14 (PreConditions)

    PreConditions  go to state 23


State 21

   12 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    FormalsList  go to state 24
    FormalDecl   go to state 18
    Type         go to state 19


State 22

   13 FormalDecl: Type ID .

    $default  reduce using rule 13 (FormalDecl)


State 23

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN PreConditions . LBRACE $@2 Statements RBRACE
   15 PreConditions: PreConditions . PreCondition

    PRECOND  shift, and go to state 25
    LBRACE   shift, and go to state 26

    PreCondition  go to state 27


State 24

   12 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 12 (FormalsList)


State 25

   17 PreCondition: PRECOND . LPAREN Exp $@3 RPAREN

    LPAREN  shift, and go to state 28


State 26

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN PreConditions LBRACE . $@2 Statements RBRACE

    $default  reduce using rule 5 ($@2)

    $@2  go to state 29


State 27

   15 PreConditions: PreConditions PreCondition .

    $default  reduce using rule 15 (PreConditions)


State 28

   17 PreCondition: PRECOND LPAREN . Exp $@3 RPAREN

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 38


State 29

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN PreConditions LBRACE $@2 . Statements RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Statements        go to state 46
    Statement         go to state 47
    Open_statement    go to state 48
    Closed_statement  go to state 49
    While_Start       go to state 50
    If_Start          go to state 51
    If_Else           go to state 52
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 30

   61 Exp: NOT . Exp

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 56


State 31

   59 Exp: TRUE .

    $default  reduce using rule 59 (Exp)


State 32

   60 Exp: FALSE .

    $default  reduce using rule 60 (Exp)


State 33

   52 Exp: LPAREN . Exp RPAREN

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 57


State 34

   45 Call: ID . LPAREN ExpList RPAREN
   46     | ID . LPAREN RPAREN
   54 Exp: ID .

    LPAREN  shift, and go to state 58

    $default  reduce using rule 54 (Exp)


State 35

   56 Exp: NUM .
   57    | NUM . B

    B  shift, and go to state 59

    $default  reduce using rule 56 (Exp)


State 36

   58 Exp: STRING .

    $default  reduce using rule 58 (Exp)


State 37

   55 Exp: Call .

    $default  reduce using rule 55 (Exp)


State 38

   17 PreCondition: PRECOND LPAREN Exp . $@3 RPAREN
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR     shift, and go to state 60
    AND    shift, and go to state 61
    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63

    $default  reduce using rule 16 ($@3)

    $@3  go to state 64


State 39

   41 Simple_statement: RETURN . SC
   42                 | RETURN . Exp SC

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    SC      shift, and go to state 65
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 66


State 40

   31 If_Start: IF . LPAREN Exp RPAREN

    LPAREN  shift, and go to state 67


State 41

   30 While_Start: WHILE . $@4 LPAREN M Exp RPAREN

    $default  reduce using rule 29 ($@4)

    $@4  go to state 68


State 42

   43 Simple_statement: BREAK . SC

    SC  shift, and go to state 69


State 43

   44 Simple_statement: CONTINUE . SC

    SC  shift, and go to state 70


State 44

   36 Simple_statement: LBRACE . $@7 Statements RBRACE

    $default  reduce using rule 35 ($@7)

    $@7  go to state 71


State 45

   39 Simple_statement: ID . ASSIGN Exp SC
   45 Call: ID . LPAREN ExpList RPAREN
   46     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 58
    ASSIGN  shift, and go to state 72


State 46

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN PreConditions LBRACE $@2 Statements . RBRACE
   19 Statements: Statements . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    RBRACE    shift, and go to state 73
    ID        shift, and go to state 45

    Statement         go to state 74
    Open_statement    go to state 48
    Closed_statement  go to state 49
    While_Start       go to state 50
    If_Start          go to state 51
    If_Else           go to state 52
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 47

   18 Statements: Statement .

    $default  reduce using rule 18 (Statements)


State 48

   20 Statement: Open_statement .

    $default  reduce using rule 20 (Statement)


State 49

   21 Statement: Closed_statement .

    $default  reduce using rule 21 (Statement)


State 50

   25 Open_statement: While_Start . Open_statement
   28 Closed_statement: While_Start . M Closed_statement

    IF     shift, and go to state 40
    WHILE  shift, and go to state 41

    IF        [reduce using rule 65 (M)]
    WHILE     [reduce using rule 65 (M)]
    $default  reduce using rule 65 (M)

    Open_statement  go to state 75
    While_Start     go to state 76
    If_Start        go to state 51
    If_Else         go to state 77
    M               go to state 78


State 51

   22 Open_statement: If_Start . M Simple_statement
   23               | If_Start . M Open_statement
   34 If_Else: If_Start . M Closed_statement N $@5 ELSE $@6 M

    $default  reduce using rule 65 (M)

    M  go to state 79


State 52

   24 Open_statement: If_Else . Open_statement
   27 Closed_statement: If_Else . Closed_statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Open_statement    go to state 80
    Closed_statement  go to state 81
    While_Start       go to state 50
    If_Start          go to state 51
    If_Else           go to state 52
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 53

   26 Closed_statement: Simple_statement .

    $default  reduce using rule 26 (Closed_statement)


State 54

   40 Simple_statement: Call . SC

    SC  shift, and go to state 82


State 55

   37 Simple_statement: Type . ID SC
   38                 | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 83


State 56

   53 Exp: Exp . BINOP Exp
   61    | NOT Exp .
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63

    $default  reduce using rule 61 (Exp)


State 57

   52 Exp: LPAREN Exp . RPAREN
   53    | Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR      shift, and go to state 60
    AND     shift, and go to state 61
    RPAREN  shift, and go to state 84
    RELOP   shift, and go to state 62
    BINOP   shift, and go to state 63


State 58

   45 Call: ID LPAREN . ExpList RPAREN
   46     | ID LPAREN . RPAREN

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    RPAREN  shift, and go to state 85
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call     go to state 37
    ExpList  go to state 86
    Exp      go to state 87


State 59

   57 Exp: NUM B .

    $default  reduce using rule 57 (Exp)


State 60

   63 Exp: Exp OR . M Exp

    $default  reduce using rule 65 (M)

    M  go to state 88


State 61

   62 Exp: Exp AND . M Exp

    $default  reduce using rule 65 (M)

    M  go to state 89


State 62

   64 Exp: Exp RELOP . Exp

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 90


State 63

   53 Exp: Exp BINOP . Exp

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 91


State 64

   17 PreCondition: PRECOND LPAREN Exp $@3 . RPAREN

    RPAREN  shift, and go to state 92


State 65

   41 Simple_statement: RETURN SC .

    $default  reduce using rule 41 (Simple_statement)


State 66

   42 Simple_statement: RETURN Exp . SC
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR     shift, and go to state 60
    AND    shift, and go to state 61
    SC     shift, and go to state 93
    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63


State 67

   31 If_Start: IF LPAREN . Exp RPAREN

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 94


State 68

   30 While_Start: WHILE $@4 . LPAREN M Exp RPAREN

    LPAREN  shift, and go to state 95


State 69

   43 Simple_statement: BREAK SC .

    $default  reduce using rule 43 (Simple_statement)


State 70

   44 Simple_statement: CONTINUE SC .

    $default  reduce using rule 44 (Simple_statement)


State 71

   36 Simple_statement: LBRACE $@7 . Statements RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Statements        go to state 96
    Statement         go to state 47
    Open_statement    go to state 48
    Closed_statement  go to state 49
    While_Start       go to state 50
    If_Start          go to state 51
    If_Else           go to state 52
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 72

   39 Simple_statement: ID ASSIGN . Exp SC

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 97


State 73

    6 FuncDecl: RetType ID LPAREN $@1 Formals RPAREN PreConditions LBRACE $@2 Statements RBRACE .

    $default  reduce using rule 6 (FuncDecl)


State 74

   19 Statements: Statements Statement .

    $default  reduce using rule 19 (Statements)


State 75

   25 Open_statement: While_Start Open_statement .

    $default  reduce using rule 25 (Open_statement)


State 76

   25 Open_statement: While_Start . Open_statement

    IF     shift, and go to state 40
    WHILE  shift, and go to state 41

    Open_statement  go to state 75
    While_Start     go to state 76
    If_Start        go to state 51
    If_Else         go to state 77


State 77

   24 Open_statement: If_Else . Open_statement

    IF     shift, and go to state 40
    WHILE  shift, and go to state 41

    Open_statement  go to state 80
    While_Start     go to state 76
    If_Start        go to state 51
    If_Else         go to state 77


State 78

   28 Closed_statement: While_Start M . Closed_statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Closed_statement  go to state 98
    While_Start       go to state 99
    If_Start          go to state 100
    If_Else           go to state 101
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 79

   22 Open_statement: If_Start M . Simple_statement
   23               | If_Start M . Open_statement
   34 If_Else: If_Start M . Closed_statement N $@5 ELSE $@6 M

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Open_statement    go to state 102
    Closed_statement  go to state 103
    While_Start       go to state 50
    If_Start          go to state 51
    If_Else           go to state 52
    Simple_statement  go to state 104
    Call              go to state 54
    Type              go to state 55


State 80

   24 Open_statement: If_Else Open_statement .

    $default  reduce using rule 24 (Open_statement)


State 81

   27 Closed_statement: If_Else Closed_statement .

    $default  reduce using rule 27 (Closed_statement)


State 82

   40 Simple_statement: Call SC .

    $default  reduce using rule 40 (Simple_statement)


State 83

   37 Simple_statement: Type ID . SC
   38                 | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 105
    ASSIGN  shift, and go to state 106


State 84

   52 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 52 (Exp)


State 85

   46 Call: ID LPAREN RPAREN .

    $default  reduce using rule 46 (Call)


State 86

   45 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 107


State 87

   47 ExpList: Exp .
   48        | Exp . COMMA ExpList
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR     shift, and go to state 60
    AND    shift, and go to state 61
    COMMA  shift, and go to state 108
    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63

    $default  reduce using rule 47 (ExpList)


State 88

   63 Exp: Exp OR M . Exp

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 109


State 89

   62 Exp: Exp AND M . Exp

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 110


State 90

   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp
   64    | Exp RELOP Exp .

    BINOP  shift, and go to state 63

    RELOP  error (nonassociative)

    $default  reduce using rule 64 (Exp)


State 91

   53 Exp: Exp . BINOP Exp
   53    | Exp BINOP Exp .
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    $default  reduce using rule 53 (Exp)


State 92

   17 PreCondition: PRECOND LPAREN Exp $@3 RPAREN .

    $default  reduce using rule 17 (PreCondition)


State 93

   42 Simple_statement: RETURN Exp SC .

    $default  reduce using rule 42 (Simple_statement)


State 94

   31 If_Start: IF LPAREN Exp . RPAREN
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR      shift, and go to state 60
    AND     shift, and go to state 61
    RPAREN  shift, and go to state 111
    RELOP   shift, and go to state 62
    BINOP   shift, and go to state 63


State 95

   30 While_Start: WHILE $@4 LPAREN . M Exp RPAREN

    $default  reduce using rule 65 (M)

    M  go to state 112


State 96

   19 Statements: Statements . Statement
   36 Simple_statement: LBRACE $@7 Statements . RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    RBRACE    shift, and go to state 113
    ID        shift, and go to state 45

    Statement         go to state 74
    Open_statement    go to state 48
    Closed_statement  go to state 49
    While_Start       go to state 50
    If_Start          go to state 51
    If_Else           go to state 52
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 97

   39 Simple_statement: ID ASSIGN Exp . SC
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR     shift, and go to state 60
    AND    shift, and go to state 61
    SC     shift, and go to state 114
    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63


State 98

   28 Closed_statement: While_Start M Closed_statement .

    $default  reduce using rule 28 (Closed_statement)


State 99

   28 Closed_statement: While_Start . M Closed_statement

    $default  reduce using rule 65 (M)

    M  go to state 78


State 100

   34 If_Else: If_Start . M Closed_statement N $@5 ELSE $@6 M

    $default  reduce using rule 65 (M)

    M  go to state 115


State 101

   27 Closed_statement: If_Else . Closed_statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Closed_statement  go to state 81
    While_Start       go to state 99
    If_Start          go to state 100
    If_Else           go to state 101
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 102

   23 Open_statement: If_Start M Open_statement .

    $default  reduce using rule 23 (Open_statement)


State 103

   34 If_Else: If_Start M Closed_statement . N $@5 ELSE $@6 M

    $default  reduce using rule 66 (N)

    N  go to state 116


State 104

   22 Open_statement: If_Start M Simple_statement .
   26 Closed_statement: Simple_statement .

    ELSE      reduce using rule 26 (Closed_statement)
    $default  reduce using rule 22 (Open_statement)


State 105

   37 Simple_statement: Type ID SC .

    $default  reduce using rule 37 (Simple_statement)


State 106

   38 Simple_statement: Type ID ASSIGN . Exp SC

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 117


State 107

   45 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 45 (Call)


State 108

   48 ExpList: Exp COMMA . ExpList

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call     go to state 37
    ExpList  go to state 118
    Exp      go to state 87


State 109

   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   63    | Exp OR M Exp .
   64    | Exp . RELOP Exp

    AND    shift, and go to state 61
    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63

    $default  reduce using rule 63 (Exp)


State 110

   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   62    | Exp AND M Exp .
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63

    $default  reduce using rule 62 (Exp)


State 111

   31 If_Start: IF LPAREN Exp RPAREN .

    $default  reduce using rule 31 (If_Start)


State 112

   30 While_Start: WHILE $@4 LPAREN M . Exp RPAREN

    NOT     shift, and go to state 30
    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    LPAREN  shift, and go to state 33
    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    STRING  shift, and go to state 36

    Call  go to state 37
    Exp   go to state 119


State 113

   36 Simple_statement: LBRACE $@7 Statements RBRACE .

    $default  reduce using rule 36 (Simple_statement)


State 114

   39 Simple_statement: ID ASSIGN Exp SC .

    $default  reduce using rule 39 (Simple_statement)


State 115

   34 If_Else: If_Start M . Closed_statement N $@5 ELSE $@6 M

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 39
    IF        shift, and go to state 40
    WHILE     shift, and go to state 41
    BREAK     shift, and go to state 42
    CONTINUE  shift, and go to state 43
    LBRACE    shift, and go to state 44
    ID        shift, and go to state 45

    Closed_statement  go to state 103
    While_Start       go to state 99
    If_Start          go to state 100
    If_Else           go to state 101
    Simple_statement  go to state 53
    Call              go to state 54
    Type              go to state 55


State 116

   34 If_Else: If_Start M Closed_statement N . $@5 ELSE $@6 M

    $default  reduce using rule 32 ($@5)

    $@5  go to state 120


State 117

   38 Simple_statement: Type ID ASSIGN Exp . SC
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR     shift, and go to state 60
    AND    shift, and go to state 61
    SC     shift, and go to state 121
    RELOP  shift, and go to state 62
    BINOP  shift, and go to state 63


State 118

   48 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 48 (ExpList)


State 119

   30 While_Start: WHILE $@4 LPAREN M Exp . RPAREN
   53 Exp: Exp . BINOP Exp
   62    | Exp . AND M Exp
   63    | Exp . OR M Exp
   64    | Exp . RELOP Exp

    OR      shift, and go to state 60
    AND     shift, and go to state 61
    RPAREN  shift, and go to state 122
    RELOP   shift, and go to state 62
    BINOP   shift, and go to state 63


State 120

   34 If_Else: If_Start M Closed_statement N $@5 . ELSE $@6 M

    ELSE  shift, and go to state 123


State 121

   38 Simple_statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 38 (Simple_statement)


State 122

   30 While_Start: WHILE $@4 LPAREN M Exp RPAREN .

    $default  reduce using rule 30 (While_Start)


State 123

   34 If_Else: If_Start M Closed_statement N $@5 ELSE . $@6 M

    $default  reduce using rule 33 ($@6)

    $@6  go to state 124


State 124

   34 If_Else: If_Start M Closed_statement N $@5 ELSE $@6 . M

    $default  reduce using rule 65 (M)

    M  go to state 125


State 125

   34 If_Else: If_Start M Closed_statement N $@5 ELSE $@6 M .

    $default  reduce using rule 34 (If_Else)
